
https://help.ptzoptics.com/support/discussions/topics/13000029804

it will not respond to recalls of presets,

1). When using the stream deck I had a multi action first send preset recall via http-cgi and then after a delay call a python script to send a visca command for iris setting.  Without a sufficient delay (>=2500mS)  between the two commands the problem would sometimes occur.  


Me:
>> If I send 9 "recall" commands in a loop with no pause other than waiting for the camera to report success, it works fine. Likewise if I send 9 "set" commands. But if I send 9 "recall/set" combinations in a loop, the camera will stop responding at the 3rd "recall”. Putting in a 1 second delay after the set works around this.

PTZ Support:
> It is expected that you would need to put a delay in between each command, the camera may get overloaded with all at once.

I think they missed the “waiting for the camera to report success”. I still think it’s a bug, but I guess I need a bigger delay.
After getting all 3 of our cameras on the latest firmware, a 1 second delay works for them all. Cameras on older firmware needed a 5 second delay.

signal 13
https://stackoverflow.com/questions/108183/how-to-prevent-sigpipes-or-handle-them-properly

Apparently PTZOptics doesn't support cancel:
Packet: 81 20 ff
errortype 02 (expected 04)
- but we can cancel the loop.

//  downloadDestination[reply] = new QFile(QStandardPaths::writableLocation(QStandardPaths::AppDataLocation) + QString::asprintf("%s" , (DOWNLOAD_FILE_DEST_PREFIX)) + currentCamIp + QString::number(1) + ".jpg");
//
// AppDataLocation is
// \li "~/Library/Application Support/<APPNAME>", "/Library/Application Support/<APPNAME>". "<APPDIR>/../Resources"

#define DEFAULT_SETTINGS_PATH "/ptzoptics-controller/settings.ini"
#define DOWNLOAD_FILE_DEST_PREFIX "/ptzoptics-controller/downloads/snapshot_"
#define DOWNLOAD_FILE_URI "/snapshot.jpg"
//     settings->setValue(QString::asprintf("mem%d", presetNum) + currentCamIp, presetText);

